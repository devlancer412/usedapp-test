/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PeggedPalladium,
  PeggedPalladiumInterface,
} from "../../contracts/PeggedPalladium";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "isWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601081526f5065676765642050616c6c616469756d60801b602080830191825283518085019094526005845264141410531160da1b908401528151919291620000679160039162000102565b5080516200007d90600490602084019062000102565b5050506200009a62000094620000ac60201b60201c565b620000b0565b670de0b6b3a7640000600755620001e5565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011090620001a8565b90600052602060002090601f0160209004810192826200013457600085556200017f565b82601f106200014f57805160ff19168380011785556200017f565b828001600101855582156200017f579182015b828111156200017f57825182559160200191906001019062000162565b506200018d92915062000191565b5090565b5b808211156200018d576000815560010162000192565b600181811c90821680620001bd57607f821691505b60208210811415620001df57634e487b7160e01b600052602260045260246000fd5b50919050565b61119f80620001f56000396000f3fe6080604052600436106101395760003560e01c8063715018a6116100ab578063a0712d681161006f578063a0712d6814610343578063a457c2d714610363578063a9059cbb14610383578063c683630d146103a3578063dd62ed3e146103dc578063f2fde38b146103fc57600080fd5b8063715018a6146102b15780638d14e127146102c65780638da5cb5b146102e65780638e3073a61461030e57806395d89b411461032e57600080fd5b80632c4e722e116100fd5780632c4e722e146101e9578063313ce567146101ff57806334fcf4371461021b578063395093511461023b57806342966c681461025b57806370a082311461027b57600080fd5b806306fdde0314610145578063095ea7b31461017057806318160ddd146101a057806321df0da7146101bf57806323b872dd146101c957600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5061015a61041c565b6040516101679190610ea0565b60405180910390f35b34801561017c57600080fd5b5061019061018b366004610f11565b6104ae565b6040519015158152602001610167565b3480156101ac57600080fd5b506002545b604051908152602001610167565b6101c76104c6565b005b3480156101d557600080fd5b506101906101e4366004610f3b565b610568565b3480156101f557600080fd5b506101b160075481565b34801561020b57600080fd5b5060405160008152602001610167565b34801561022757600080fd5b506101c7610236366004610f77565b61058c565b34801561024757600080fd5b50610190610256366004610f11565b610599565b34801561026757600080fd5b506101c7610276366004610f77565b6105bb565b34801561028757600080fd5b506101b1610296366004610f90565b6001600160a01b031660009081526020819052604090205490565b3480156102bd57600080fd5b506101c76105ff565b3480156102d257600080fd5b506101c76102e1366004610fb2565b610613565b3480156102f257600080fd5b506005546040516001600160a01b039091168152602001610167565b34801561031a57600080fd5b506101c7610329366004610f77565b610646565b34801561033a57600080fd5b5061015a610710565b34801561034f57600080fd5b506101c761035e366004610f77565b61071f565b34801561036f57600080fd5b5061019061037e366004610f11565b610731565b34801561038f57600080fd5b5061019061039e366004610f11565b6107ac565b3480156103af57600080fd5b506101906103be366004610f90565b6001600160a01b031660009081526006602052604090205460ff1690565b3480156103e857600080fd5b506101b16103f7366004610fee565b6107ba565b34801561040857600080fd5b506101c7610417366004610f90565b6107e5565b60606003805461042b90611021565b80601f016020809104026020016040519081016040528092919081815260200182805461045790611021565b80156104a45780601f10610479576101008083540402835291602001916104a4565b820191906000526020600020905b81548152906001019060200180831161048757829003601f168201915b5050505050905090565b6000336104bc81858561085b565b5060019392505050565b3360009081526006602052604090205460ff166104fe5760405162461bcd60e51b81526004016104f59061105c565b60405180910390fd5b60006007543461050e91906110b8565b905060006007548261052091906110da565b61052a90346110f9565b9050610536338361097f565b604051339082156108fc029083906000818181858888f19350505050158015610563573d6000803e3d6000fd5b505050565b600033610576858285610a5e565b610581858585610ad8565b506001949350505050565b610594610ca6565b600755565b6000336104bc8185856105ac83836107ba565b6105b69190611110565b61085b565b6105c3610ca6565b336000908152602081905260409020548111156105f25760405162461bcd60e51b81526004016104f590611128565b6105fc3382610d00565b50565b610607610ca6565b6106116000610e4e565b565b61061b610ca6565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b3360009081526006602052604090205460ff166106755760405162461bcd60e51b81526004016104f59061105c565b336000908152602081905260409020548111156106a45760405162461bcd60e51b81526004016104f590611128565b6000600754826106b491906110da565b9050804710156107065760405162461bcd60e51b815260206004820152601f60248201527f5050414c443a20496e73756666696369656e74206574682062616c616e63650060448201526064016104f5565b6105363383610d00565b60606004805461042b90611021565b610727610ca6565b6105fc338261097f565b6000338161073f82866107ba565b90508381101561079f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104f5565b610581828686840361085b565b6000336104bc818585610ad8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107ed610ca6565b6001600160a01b0381166108525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f5565b6105fc81610e4e565b6001600160a01b0383166108bd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104f5565b6001600160a01b03821661091e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104f5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166109d55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104f5565b80600260008282546109e79190611110565b90915550506001600160a01b03821660009081526020819052604081208054839290610a14908490611110565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610a6a84846107ba565b90506000198114610ad25781811015610ac55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104f5565b610ad2848484840361085b565b50505050565b6001600160a01b038316610b3c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104f5565b6001600160a01b038216610b9e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104f5565b6001600160a01b03831660009081526020819052604090205481811015610c165760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104f5565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610c4d908490611110565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c9991815260200190565b60405180910390a3610ad2565b6005546001600160a01b031633146106115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f5565b6001600160a01b038216610d605760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104f5565b6001600160a01b03821660009081526020819052604090205481811015610dd45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104f5565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610e039084906110f9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610ecd57858101830151858201604001528201610eb1565b81811115610edf576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f0c57600080fd5b919050565b60008060408385031215610f2457600080fd5b610f2d83610ef5565b946020939093013593505050565b600080600060608486031215610f5057600080fd5b610f5984610ef5565b9250610f6760208501610ef5565b9150604084013590509250925092565b600060208284031215610f8957600080fd5b5035919050565b600060208284031215610fa257600080fd5b610fab82610ef5565b9392505050565b60008060408385031215610fc557600080fd5b610fce83610ef5565b915060208301358015158114610fe357600080fd5b809150509250929050565b6000806040838503121561100157600080fd5b61100a83610ef5565b915061101860208401610ef5565b90509250929050565b600181811c9082168061103557607f821691505b6020821081141561105657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526026908201527f5050414c443a2063616c6c6572206973206e6f74207768697465206c6973742060408201526536b2b6b132b960d11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000826110d557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156110f4576110f46110a2565b500290565b60008282101561110b5761110b6110a2565b500390565b60008219821115611123576111236110a2565b500190565b60208082526021908201527f5050414c443a20496e73756666696369656e7420746f6b656e2062616c616e636040820152606560f81b60608201526080019056fea264697066735822122019ff3fb2e40db51ae928dc850760e09d9f923bfb08323109b60879ec2ee3de1364736f6c63430008090033";

type PeggedPalladiumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PeggedPalladiumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PeggedPalladium__factory extends ContractFactory {
  constructor(...args: PeggedPalladiumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PeggedPalladium> {
    return super.deploy(overrides || {}) as Promise<PeggedPalladium>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PeggedPalladium {
    return super.attach(address) as PeggedPalladium;
  }
  override connect(signer: Signer): PeggedPalladium__factory {
    return super.connect(signer) as PeggedPalladium__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeggedPalladiumInterface {
    return new utils.Interface(_abi) as PeggedPalladiumInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PeggedPalladium {
    return new Contract(address, _abi, signerOrProvider) as PeggedPalladium;
  }
}
